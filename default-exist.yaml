# yq ea -iI 4 'select(fi==0) *? select(fi==1)' config.yaml ../default-exist.yaml

# Application service host/registration related details.
# Changing these values requires regeneration of the registration.
appservice:
    public:
        # The base URL where the public-facing endpoints are available. The prefix is not added
        # implicitly.
        external: https://juniiimoh.pp.ua/public
# Bridge config
bridge:
    # Should contact names and profile pictures be allowed?
    # This is only safe to enable on single-user instances.
    allow_contact_info: true
    # Allow invite permission for user. User can invite any bots to room with whatsapp
    # users (private chat and groups)
    allow_user_invite: true
    # Same as above for archived chats, the low priority tag is `m.lowpriority`.
    archive_tag: m.lowpriority
    # Settings for backfilling messages.
    backfill:
        # Use double puppets for backfilling?
        #
        # If using MSC2716, the double puppets must be in the appservice's user ID namespace
        # (because the bridge can't use the double puppet access token with batch sending).
        #
        # Even without MSC2716, bridging old messages with correct timestamps requires the double
        # puppets to be in an appservice namespace, or the server to be modified to allow
        # overriding timestamps anyway.
        double_puppet_backfill: true
        # Enable backfill queue? This is used for backfilling additional threads after the initial sync,
        # and when MSC2716 is enabled, to backfill message history going backwards.
        enable: true
        # Limits for forward backfilling.
        forward_limits:
            # Initial backfill (when creating portal). 0 means backfill is disabled.
            # A special unlimited value is not supported, you must set a limit. Initial backfill will
            # fetch all messages first before backfilling anything, so high limits can take a lot of time.
            initial:
                channel: 10
                dm: 50
                thread: 100
            # Missed message backfill (on startup).
            # 0 means backfill is disabled, -1 means fetch all messages since last bridged message.
            # When using unlimited backfill (-1), messages are backfilled as they are fetched.
            # With limits, all messages up to the limit are fetched first and backfilled afterwards.
            missed:
                channel: -1
                dm: -1
                thread: -1
        # If this value is greater than 0, then if the conversation's last
        # message was more than this number of hours ago, then the conversation
        # will automatically be marked it as read.
        # Conversations that have a last message that is less than this number
        # of hours ago will have their unread status synced from Facebook.
        unread_hours_threshold: -1
    bridge_notices:
        # Whether or not Matrix bot messages (type m.notice) should be bridged.
        default: true
    # Send captions in the same message as images. This will send data compatible with both MSC2530 and MSC3552.
    # This is currently not supported in most clients.
    caption_in_message: true
    # Should the bridge attempt to completely delete portal rooms when a channel is deleted on Discord?
    # If true, the bridge will try to kick Matrix users from the room. Otherwise, the bridge only makes ghosts leave.
    delete_portal_on_channel_delete: true
    # Should WhatsApp status messages be bridged into a Matrix room?
    # Disabling this won't affect already created status broadcast rooms.
    enable_status_broadcast: false
    # End-to-bridge encryption support options.
    #
    # See https://docs.mau.fi/bridges/general/end-to-bridge-encryption.html for more info.
    encryption:
        # Allow encryption, work in group chat rooms with e2ee enabled
        allow: true
        # Default to encryption, force-enable encryption in all portals the bridge creates
        # This will cause the bridge bot to be in private chats for the encryption to work properly.
        default: true
    # Should polls be sent using MSC3381 event types?
    extev_polls: true
    # Settings for handling history sync payloads.
    history_sync:
        # Settings for immediate backfills. These backfills should generally be small and their main purpose is
        # to populate each of the initial chats (as configured by max_initial_conversations) with a few messages
        # so that you can continue conversations without losing context.
        immediate:
            # The maximum number of events to backfill initially.
            max_events: 50
        # If this value is greater than 0, then if the conversation's last message was more than
        # this number of hours ago, then the conversation will automatically be marked it as read.
        # Conversations that have a last message that is less than this number of hours ago will
        # have their unread status synced from WhatsApp.
        unread_hours_threshold: -1
    # Whether or not the Facebook users of logged in Matrix users should be
    # invited to private chats when the user sends a message from another client.
    invite_own_puppet_to_pm: true
    # When using double puppeting, should muted chats be muted in Matrix?
    mute_bridging: true
    # When using double puppeting, should pinned chats be moved to a specific tag in Matrix?
    # The favorites tag is `m.favourite`.
    pinned_tag: m.favourite
    # Whether to explicitly set the avatar and room name for private chat portal rooms.
    # If set to `default`, this will be enabled in encrypted rooms and disabled in unencrypted rooms.
    # If set to `always`, all DM rooms will have explicit names and avatars set.
    # If set to `never`, DM rooms will never have names and avatars set.
    private_chat_portal_meta: always
    # Settings for provisioning API
    provisioning:
        # Whether or not the provisioning API should be enabled.
        enabled: false
        # Shared secret for authentication. If set to "generate", a random secret will be generated,
        # or if set to "disable", the provisioning API will be disabled.
        shared_secret: disable
    relaybot:
        # List of usernames/user IDs who are also allowed to use the bot commands.
        whitelist: []
    # Whether or not to automatically synchronize contacts and chats of Matrix users logged into
    # their Telegram account at startup.
    startup_sync: true
    # Number of most recently active dialogs to create portals for when syncing chats.
    # Set to 0 to remove limit.
    sync_create_limit: 0
    # Should all chats be scheduled to be created later?
    # This is best used in combination with MSC2716 infinite backfill.
    sync_deferred_create_all: true
    # Should the bridge update the m.direct account data event when double puppeting is enabled.
    # Note that updating the m.direct event is not atomic (except with mautrix-asmux)
    # and is therefore prone to race conditions.
    sync_direct_chat_list: true
    # Whether or not to sync and create portals for direct chats at startup.
    sync_direct_chats: true
    # Whether or not mute status and tags should only be bridged when the portal room is created.
    tag_only_on_create: false
    # Should the bridge detect URLs in outgoing messages, ask the homeserver to generate a preview,
    # and send it to WhatsApp? URL previews can always be sent using the `com.beeper.linkpreviews`
    # key in the event content even if this is disabled.
    url_previews: true
facebook:
    # Seed for generating devices. This is secret because the seed is used to generate
    # device IDs, which can apparently be used to bypass two-factor authentication after
    # logging out, because Instagram is insecure.
    device_seed: bZN2KuSgTmD2Q5GfGQyrwaCNNqjNwBS2UF5_EnIw1tgGA4QTZRdEPtene-c9bRIM
# Homeserver details.
homeserver:
    # The address that this appservice can use to connect to the homeserver.
    address: http://localhost:8008
    # The domain of the homeserver (also known as server_name, used for MXIDs, etc).
    domain: juniiimoh.pp.ua
instagram:
    # Seed for generating devices. This is secret because the seed is used to generate
    # device IDs, which can apparently be used to bypass two-factor authentication after
    # logging out, because Instagram is insecure.
    device_seed: BfCiG9YmUZ39ux4zD-upk7KlG-7NAifQCRhwamyMVby6PKpznp5DzprJCoJRB02K
# Manhole config.
manhole:
    # The list of UIDs who can be added to the whitelist.
    # If empty, any UIDs can be specified in the open-manhole command.
    whitelist: []
telegram:
    # Get your own API keys at https://my.telegram.org/apps
    api_hash: c4dacba0d0dbe2e7b57844d47773675b
    api_id: 25190236
    # Device info sent to Telegram.
    device_info:
        # "auto" = OS name+version.
        device_model: auto
